/* 
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :- -- -- -- -- -- --: | - -- -- -- -- -- -- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sib_api_v3_sdk.Client;
using sib_api_v3_sdk.Api;
using sib_api_v3_sdk.Model;

namespace sib_api_v3_sdk.Test
{
    /// <summary>
    ///  Class for testing SMTPApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SMTPApiTests
    {
        private SMTPApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SMTPApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SMTPApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SMTPApi
            //Assert.IsInstanceOfType(typeof(SMTPApi), instance, "instance is a SMTPApi");
        }

        
        /// <summary>
        /// Test CreateSmtpTemplate
        /// </summary>
        [Test]
        public void CreateSmtpTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSmtpTemplate smtpTemplate = null;
            //var response = instance.CreateSmtpTemplate(smtpTemplate);
            //Assert.IsInstanceOf<CreateModel> (response, "response is CreateModel");
        }
        
        /// <summary>
        /// Test DeleteHardbounces
        /// </summary>
        [Test]
        public void DeleteHardbouncesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteHardbounces deleteHardbounces = null;
            //instance.DeleteHardbounces(deleteHardbounces);
            
        }
        
        /// <summary>
        /// Test DeleteSmtpTemplate
        /// </summary>
        [Test]
        public void DeleteSmtpTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? templateId = null;
            //instance.DeleteSmtpTemplate(templateId);
            
        }
        
        /// <summary>
        /// Test GetAggregatedSmtpReport
        /// </summary>
        [Test]
        public void GetAggregatedSmtpReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string startDate = null;
            //string endDate = null;
            //int? days = null;
            //string tag = null;
            //var response = instance.GetAggregatedSmtpReport(startDate, endDate, days, tag);
            //Assert.IsInstanceOf<GetAggregatedReport> (response, "response is GetAggregatedReport");
        }
        
        /// <summary>
        /// Test GetEmailEventReport
        /// </summary>
        [Test]
        public void GetEmailEventReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? limit = null;
            //long? offset = null;
            //string startDate = null;
            //string endDate = null;
            //int? days = null;
            //string email = null;
            //string _event = null;
            //string tags = null;
            //string messageId = null;
            //long? templateId = null;
            //var response = instance.GetEmailEventReport(limit, offset, startDate, endDate, days, email, _event, tags, messageId, templateId);
            //Assert.IsInstanceOf<GetEmailEventReport> (response, "response is GetEmailEventReport");
        }
        
        /// <summary>
        /// Test GetSmtpReport
        /// </summary>
        [Test]
        public void GetSmtpReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? limit = null;
            //long? offset = null;
            //string startDate = null;
            //string endDate = null;
            //int? days = null;
            //string tag = null;
            //var response = instance.GetSmtpReport(limit, offset, startDate, endDate, days, tag);
            //Assert.IsInstanceOf<GetReports> (response, "response is GetReports");
        }
        
        /// <summary>
        /// Test GetSmtpTemplate
        /// </summary>
        [Test]
        public void GetSmtpTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? templateId = null;
            //var response = instance.GetSmtpTemplate(templateId);
            //Assert.IsInstanceOf<GetSmtpTemplateOverview> (response, "response is GetSmtpTemplateOverview");
        }
        
        /// <summary>
        /// Test GetSmtpTemplates
        /// </summary>
        [Test]
        public void GetSmtpTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? templateStatus = null;
            //long? limit = null;
            //long? offset = null;
            //var response = instance.GetSmtpTemplates(templateStatus, limit, offset);
            //Assert.IsInstanceOf<GetSmtpTemplates> (response, "response is GetSmtpTemplates");
        }
        
        /// <summary>
        /// Test SendTemplate
        /// </summary>
        [Test]
        public void SendTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? templateId = null;
            //SendEmail sendEmail = null;
            //var response = instance.SendTemplate(templateId, sendEmail);
            //Assert.IsInstanceOf<SendTemplateEmail> (response, "response is SendTemplateEmail");
        }
        
        /// <summary>
        /// Test SendTestTemplate
        /// </summary>
        [Test]
        public void SendTestTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? templateId = null;
            //SendTestEmail sendTestEmail = null;
            //instance.SendTestTemplate(templateId, sendTestEmail);
            
        }
        
        /// <summary>
        /// Test SendTransacEmail
        /// </summary>
        [Test]
        public void SendTransacEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendSmtpEmail sendSmtpEmail = null;
            //var response = instance.SendTransacEmail(sendSmtpEmail);
            //Assert.IsInstanceOf<CreateSmtpEmail> (response, "response is CreateSmtpEmail");
        }
        
        /// <summary>
        /// Test UpdateSmtpTemplate
        /// </summary>
        [Test]
        public void UpdateSmtpTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? templateId = null;
            //UpdateSmtpTemplate smtpTemplate = null;
            //instance.UpdateSmtpTemplate(templateId, smtpTemplate);
            
        }
        
    }

}
